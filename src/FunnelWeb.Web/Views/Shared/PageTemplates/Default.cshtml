@model FunnelWeb.Web.Views.Wiki.PageModel
@{
	// This is the default template that renders a blog post.
	// The actual "Page" does nothing except render the body of the post and meta data.
	Layout = "~/Views/Shared/_Public.cshtml";
}
@section Meta {
	<meta name="description" content="@Model.Entry.MetaDescription" />
	<meta name="keywords" content="@Model.Entry.TagsCommaSeparated" />
	<link rel="canonical" href="@Html.Qualify(Html.ActionUrl("Page", new { page = Model.Entry.Name }))" />
	<link rel="pingback" href="@Html.Qualify(Url.Content("~/pingback"))" />
	@if (Model.Entry.IsPriorVersion)
 {
		<meta name="robots" content="noindex, nofollow" />
 }
}
@section Summary {
	@Html.RenderTrusted(Model.Entry.Summary, Formats.Markdown)
}

@if (!Html.Settings().EnableDisqusCommenting)
{
	@Html.ValidationSummary("Comment unsuccessful. Please correct the errors below.")
}

@if (Model.Entry.Status == FunnelWeb.Model.EntryStatus.Private)
{
	Html.RenderPartial("_PrivateEntryNotification", Model.Page);
}
@if (!Model.Entry.HideChrome)
{
	<h1>
		@Html.ActionLink(Model.Entry.Title, "Page", "Wiki", new { page = Model.Entry.Name }, null)
	</h1>
	@Html.DisplayFor(x => x.Entry.Published, new { @class = "entry-date" })
}
<div class="entry-container@{if (Model.Entry.HideChrome)
														 {<text> hidechrome</text>}}">
	@if (!Model.Entry.HideChrome && Model.Entry.IsPriorVersion)
 {
		<div class='entry-tools'>
			<div>
				<span>You are looking at revision @Model.Entry.RevisionNumber of this page, which may be out of date. @Html.ActionLink("View the latest version.", "Page", "Wiki", new { page = Model.Entry.Name }, null)
				</span>
				@* ReSharper disable once Mvc.ActionNotResolved *@
				@if (User.Identity.IsAuthenticated)
		{
					<span>@Html.ActionLink("Revert to this version.", "Revert", "WikiAdmin", new { Area = "Admin", page = Model.Page, revision = Model.Entry.RevisionNumber }, new { })</span>
		}
				<span>&nbsp;</span>
			</div>
		</div>
 }
	@RenderBody()
	@if (!Model.Entry.HideChrome)
 {
		@Html.DisplayFor(x => Html.Settings().FacebookLike)

		@Html.DisplayFor(x => x.Entry.TagsCommaSeparated)

	 Html.RenderPartial("_EntryTools", Model, ViewData);

		@Html.DisplayFor(x => x.Entry.Pingbacks, new { Model.Entry.PingbackCount, Model.Entry.Name })
 }
 else
 {
	 Html.RenderPartial("_EntryTools", Model, ViewData);
 }
</div>
<div class="clear">
</div>
@Html.DisplayFor(x => x.Entry.Comments, new { Model.Entry })
@if (Model.Entry.IsDiscussionEnabled)
{
	if (Html.Settings().DisableCommentsOlderThan > 0 && DateTime.UtcNow.AddDays(-Html.Settings().DisableCommentsOlderThan) > Model.Entry.Published && !Html.Settings().EnableDisqusCommenting)
	{
	<p>No new comments are allowed on this post.</p>
	}
	else
	{
		Html.RenderPartial("_EditComments", Model);
	}
}

@section Scripts{
	@Scripts.Render("~/bundles/wmd")
	@Scripts.Render("~/bundles/site")
}
