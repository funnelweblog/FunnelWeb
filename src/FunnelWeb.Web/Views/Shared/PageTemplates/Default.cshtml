@model FunnelWeb.Web.Views.Wiki.PageModel
@{
    // This is the default template that renders a blog post.
    // The actual "Page" does nothing except render the body of the post and meta data.
    Layout = "~/Views/Shared/_Public.cshtml";
}
@section Meta {
    <meta name="description" content="@Model.Entry.MetaDescription" />
    <meta name="keywords" content="@Model.Entry.TagsCommaSeparated" />
    <link rel="canonical" href="@Html.Qualify(Html.ActionUrl("Page", new { page = Model.Entry.Name }))" />
    <link rel="pingback" href="@Html.Qualify(Url.Content("~/pingback"))" />
    @if (Model.Entry.IsPriorVersion)
    {
        <meta name="robots" content="noindex, nofollow" />
    }
}
@section Summary {
    @Html.RenderTrusted(Model.Entry.Summary, Formats.Markdown)
}

<div class="col col-lg-8">

    @if (!Html.Settings().EnableDisqusCommenting)
    { @Html.ValidationSummary("Comment unsuccessful. Please correct the errors below.")  }
    @if (Model.Entry.Status == FunnelWeb.Model.EntryStatus.Private) { Html.RenderPartial("_PrivateEntryNotification", Model.Page); }

    <article class="post type-post status-publish format-standard hentry">
        @if (!Model.Entry.HideChrome) { Html.RenderPartial("_EntryHeader", Model.Entry); }
        <div class="entry-content singleblog-contan@{if (Model.Entry.HideChrome)
														 {<text> hidechrome</text>}}">
            @if (!Model.Entry.HideChrome && Model.Entry.IsPriorVersion)
            {
                <div class='entry-tools'>
                    <div>
                        <span>
                            You are looking at revision @Model.Entry.RevisionNumber of this page, which may be out of date. @Html.ActionLink("View the latest version.", "Page", "Wiki", new { page = Model.Entry.Name }, null)
                        </span>
                        @* ReSharper disable once Mvc.ActionNotResolved *@
                        @if (User.Identity.IsAuthenticated)
                        {
                            <span>@Html.ActionLink("Revert to this version.", "Revert", "WikiAdmin", new { Area = "Admin", page = Model.Page, revision = Model.Entry.RevisionNumber }, new { })</span>
                        }
                        <span>&nbsp;</span>
                    </div>
                </div>
            }
            @RenderBody()
            @if (!Model.Entry.HideChrome)
            {
                @Html.DisplayFor(x => Html.Settings().FacebookLike)

                @Html.DisplayFor(x => x.Entry.TagsCommaSeparated)

                Html.RenderPartial("_EntryTools", Model, ViewData);

                @Html.DisplayFor(x => x.Entry.Pingbacks, new { Model.Entry.PingbackCount, Model.Entry.Name })
            }
            else
            {
                Html.RenderPartial("_EntryTools", Model, ViewData);
            }
        </div>
        @{ Html.RenderPartial("_EntryFooter", Model.Entry); }
    </article>

    @{ Html.RenderPartial("_EntryComments", Model.Entry); }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/site")

    <script type="text/javascript">
        $(function () {
            var converter = new Showdown.converter({ extensions: ['prettify'] });

            $('textarea#wmd-input').bind('input propertychange', function () {
                $("#wmd-preview").html(converter.makeHtml(this.value));
            });
        });
    </script>
}