@using System.Threading
@using FunnelWeb.Authentication.Internal
@using Authorization = FunnelWeb.Authentication.Internal.Authorization
@model FunnelWeb.Web.Views.Wiki.PageModel

@{
	const string anchorName = "yourComments";
	var returnUrl = string.Format("{0}?#{1}", @Request.Path, anchorName);
}

@if (Html.Settings().EnableDisqusCommenting)
{
	Html.RenderPartial("_Disqus");
}
else if (Html.AcsSettings().RequireAuthenticationForComments && !User.CheckAccess(Authorization.Operations.View, Authorization.Resources.Blog.Comment))
{
	<div>@Html.ActionLink("Login in", "Index", "Login", new { ReturnUrl = returnUrl }, new { }) to comment!</div>
}
else if (!Html.AcsSettings().RequireAuthenticationForComments || Thread.CurrentPrincipal.CheckAccess(Authorization.Operations.View, Authorization.Resources.Blog.Comment))
{
	<a id="@anchorName">&nbsp;</a>
	<h2>Your Comments on "@Model.Entry.Title":</h2>

	@Html.ValidationSummary("Comment unsuccessful. Please correct the errors below.")

	<div class='entry-comment'>
		@using (Html.BeginForm("Page", "Wiki", new { page = Model.Page }, FormMethod.Post, new { @class = "promptBeforeUnload" }))
	{
			<div class="form-body">
				<div class="editor-label">
					@Html.LabelFor(m => m.CommenterName)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.CommenterName, Html.AttributesFor(m => m.CommenterName))
					@Html.ValidationMessageFor(m => m.CommenterName)
					@Html.HintFor(m => m.CommenterName)
				</div>
				<div class="editor-label">
					@Html.LabelFor(m => m.CommenterBlog)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.CommenterBlog, Html.AttributesFor(m => m.CommenterBlog))
					@Html.ValidationMessageFor(m => m.CommenterBlog)
					@Html.HintFor(m => m.CommenterBlog)
				</div>
				<div class="editor-label">
					@Html.LabelFor(m => m.CommenterEmail)
				</div>
				<div class="editor-field">
					@Html.TextBoxFor(m => m.CommenterEmail, Html.AttributesFor(m => m.CommenterEmail))
					@Html.ValidationMessageFor(m => m.CommenterEmail)
					@Html.HintFor(m => m.CommenterEmail)
				</div>
				<div class="editor-label">
					@Html.LabelFor(m => m.Comments)
				</div>
				<div class="editor-field">
					@Html.EditorFor(m => m.Comments, Html.AttributesFor(m => m.Comments))
					@Html.ValidationMessageFor(m => m.Comments)
					@Html.HintFor(m => m.Comments)
				</div>
				<div class="editor-field">
					<input type="submit" id="submit" class="submit" value="Submit" />
				</div>
			</div>
	}
	</div>
	<h3>Preview</h3>
	<div id="wmd-preview" class="wmd-panel">
	</div>
}